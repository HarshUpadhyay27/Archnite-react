[{"E:\\MERN\\client\\src\\index.js":"1","E:\\MERN\\client\\src\\reportWebVitals.js":"2","E:\\MERN\\client\\src\\App.js":"3","E:\\MERN\\client\\src\\components\\screens\\Signin.js":"4","E:\\MERN\\client\\src\\components\\Navbar.js":"5","E:\\MERN\\client\\src\\components\\screens\\Profile.js":"6","E:\\MERN\\client\\src\\components\\screens\\CreatePost.js":"7","E:\\MERN\\client\\src\\components\\screens\\Signup.js":"8","E:\\MERN\\client\\src\\components\\screens\\UserProfile.js":"9","E:\\MERN\\client\\src\\components\\reducers\\userReducer.js":"10","E:\\MERN\\client\\src\\components\\screens\\SubUserPosts.js":"11","E:\\MERN\\client\\src\\components\\screens\\Home.js":"12"},{"size":287,"mtime":1610993737062,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1821,"mtime":1611824049186,"results":"16","hashOfConfig":"14"},{"size":2370,"mtime":1611772288570,"results":"17","hashOfConfig":"14"},{"size":3892,"mtime":1611865930748,"results":"18","hashOfConfig":"14"},{"size":4330,"mtime":1611771272105,"results":"19","hashOfConfig":"14"},{"size":3061,"mtime":1611772739988,"results":"20","hashOfConfig":"14"},{"size":3834,"mtime":1611772300845,"results":"21","hashOfConfig":"14"},{"size":4736,"mtime":1611865992640,"results":"22","hashOfConfig":"14"},{"size":547,"mtime":1611385078900,"results":"23","hashOfConfig":"14"},{"size":6374,"mtime":1612020213218,"results":"24","hashOfConfig":"14"},{"size":6355,"mtime":1611480427158,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"3i2jcx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"E:\\MERN\\client\\src\\index.js",[],["59","60"],"E:\\MERN\\client\\src\\reportWebVitals.js",[],"E:\\MERN\\client\\src\\App.js",["61","62"],"import React, { useEffect, createContext, useReducer, useContext } from \"react\";\nimport NavBar from \"./components/Navbar\";\nimport Home from \"./components/screens/Home\";\nimport Signin from \"./components/screens/Signin\";\nimport Profile from \"./components/screens/Profile\";\nimport Signup from \"./components/screens/Signup\";\nimport CreatePost from \"./components/screens/CreatePost\";\nimport { BrowserRouter, Switch, Route, useHistory } from 'react-router-dom';\nimport { reducer, initialState } from './components/reducers/userReducer';\nimport UserProfile from './components/screens/UserProfile'\nimport SubUserPosts from './components/screens/SubUserPosts'\n\nexport const UserContext = createContext()\n\nconst Routing = () => {\n  const history = useHistory()\n  const { state, dispatch } = useContext(UserContext)\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    console.log(typeof (user), user)\n    if (user) {\n      dispatch({ type: \"USER\", payload: user })\n      // history.push('/')\n    }\n    else {\n      history.push('/signin')\n    }\n  }, [])\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/signin\" component={Signin} />\n      <Route exact path=\"/profile\" component={Profile} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <Route exact path=\"/create\" component={CreatePost} />\n      <Route exact path=\"/profile/:userid\" component={UserProfile} />\n      <Route exact path=\"/myfollowerpost\" component={SubUserPosts} />\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","E:\\MERN\\client\\src\\components\\screens\\Signin.js",["63","64","65","66","67","68","69","70","71","72","73"],"import React, {useState, useContext} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Login = () =>{\r\n    const {state, dispatch} =  useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = () =>{\r\n        if(!/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(email)){\r\n            window.alert(\"invalid email\")\r\n            return\r\n        }\r\n        fetch(\"/signin\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n            if(data.error){\r\n            window.alert(data.error)\r\n            // M.toast({html: data.error})\r\n            }\r\n            else{\r\n                localStorage.setItem(\"jwt\",data.token)\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                dispatch({type:\"USER\",payload:data.user})\r\n                window.alert(\"login success\")\r\n                history.push('/')\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    return(\r\n        <main style={{maxWidth:\"650px\", margin:\"0 auto\"}}>\r\n        <div className=\"signin\">\r\n            <div className=\"card\">\r\n                <h2>SocialApp</h2>\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"email\"\r\n                value={email} \r\n                onChange={(e)=>setEmail(e.target.value)}\r\n                />\r\n                <input \r\n                type=\"password\" \r\n                placeholder=\"password\"\r\n                value={password} \r\n                onChange={(e)=>setPassword(e.target.value)}\r\n                />\r\n                <button className=\"btn\"\r\n                onClick={()=>PostData()} \r\n                >Login</button>\r\n                <h5>\r\n                    <Link to=\"/signup\" className=\"account\">Dont have an account ?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Login","E:\\MERN\\client\\src\\components\\Navbar.js",[],"E:\\MERN\\client\\src\\components\\screens\\Profile.js",["74","75","76"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { UserContext } from \"../../App\"\r\n\r\nconst Profile = () => {\r\n    const [mypic, setpics] = useState([])\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    // console.log(state)\r\n    useEffect(() => {\r\n        fetch('/mypost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                setpics(result.mypost)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (image) {\r\n            const data = new FormData()\r\n            data.append('file', image)\r\n            data.append(\"upload_preset\", \"insta-clone\")\r\n            data.append(\"cloud_name\", \"dfkq2jpbw\")\r\n            fetch(\"https://api.cloudinary.com/v1_1/dfkq2jpbw/image/upload\", {\r\n                method: \"post\",\r\n                body: data\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setUrl(data.url)\r\n                    console.log(data)\r\n                    localStorage.setItem(\"user\",JSON.stringify({...state,Pic:data.url}))\r\n                    dispatch({type:\"UPDATEPIC\",payload:data.url})\r\n                    // fetch('/updatepic',{\r\n                    //     method:\"put\",\r\n                    //     headers:{\r\n                    //         \"Content-Type\":\"application/json\",\r\n                    //         \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                    //     },\r\n                    //     body:JSON.stringify({\r\n                    //         Pic:data.url\r\n                    //     })\r\n                    // }).then(res=>res.json())\r\n                    // .then(result=>{\r\n                    //     console.log(result)\r\n                    //     localStorage.setItem(\"user\",JSON.stringify({...state,Pic:result.url}))\r\n                    //     dispatch({type:\"UPDATEPIC\",payload:result.url})\r\n                    // })\r\n                    window.location.reload()\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }, [image])\r\n\r\n    const updatePhoto = (file) => {\r\n        setImage(file)\r\n    }\r\n    return (\r\n        <main style={{ maxWidth: \"650px\", margin: \"0 auto\" }}>\r\n            <div className=\"pro\">\r\n                <div className=\"profile\">\r\n                    <div className=\"card-left\">\r\n                        <img\r\n                            src={state ? state.Pic : \"loading\"}\r\n                        />\r\n                    </div>\r\n                    <div className=\"card-right\">\r\n                        <h4>{state ? state.name : \"loading\"}</h4>\r\n                        <h5>{state ? state.email : \"loading\"}</h5>\r\n                        <div className=\"card-item\">\r\n                            <h5>{mypic.length} posts</h5>\r\n                            <h5>{state ? state.followers.length : \"0\"} followers</h5>\r\n                            <h5>{state ? state.following.length : \"0\"} following</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn\">\r\n                        <input type=\"file\"\r\n                            id=\"upload\" className=\"hidden\"\r\n                            onChange={(e) => updatePhoto(e.target.files[0])}\r\n                        />\r\n                        <label for=\"upload\">UpdatePic</label>\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"gallery\">\r\n                {\r\n                    mypic.map(item => {\r\n                        return (\r\n                            <img key={item._id} className=\"item\" src={item.photo} alt={item.title} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Profile","E:\\MERN\\client\\src\\components\\screens\\CreatePost.js",["77"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst CreatePost = () => {\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    useEffect(() => {\r\n        if(url){\r\n        fetch(\"/createpost\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                title,\r\n                body,\r\n                pic: url\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.error) {\r\n                    window.alert(data.error)\r\n                    // M.toast({html: data.error})\r\n                }\r\n                else {\r\n                    window.alert(\"created post successfully\")\r\n                    // history.push('/signin')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }, [url])\r\n\r\n    const postDetails = () => {\r\n        const data = new FormData()\r\n        data.append('file', image)\r\n        data.append(\"upload_preset\", \"insta-clone\")\r\n        data.append(\"cloud_name\", \"dfkq2jpbw\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/dfkq2jpbw/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setUrl(data.url)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <main style={{maxWidth:\"650px\", margin:\"10px auto\"}}>\r\n            <div className=\"create\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"title\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"body\"\r\n                    value={body}\r\n                    onChange={(e) => setBody(e.target.value)}\r\n                />\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn\">\r\n                        <input type=\"file\"\r\n                            id=\"upload\" className=\"hidden\"\r\n                            onChange={(e) => setImage(e.target.files[0])}\r\n                        />\r\n                        <label for=\"upload\">UPLOAD IMAGE</label>\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn-submit\"\r\n                    onClick={() => postDetails()}\r\n                >SUBMIT POST</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default CreatePost","E:\\MERN\\client\\src\\components\\screens\\Signup.js",["78","79","80","81","82","83","84","85","86","87","88"],"import React, {useState, useEffect} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n// import M from 'materialize-css'\r\n\r\nconst Signup = () =>{\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [image, setImage] = useState(\"\") \r\n    const [url, setUrl] = useState(undefined) \r\n    useEffect(() =>{\r\n        if(url){\r\n            uploadFields()\r\n        }\r\n    },[url])\r\n\r\n    const uploadPic = () =>{\r\n        const data = new FormData()\r\n        data.append('file', image)\r\n        data.append(\"upload_preset\", \"insta-clone\")\r\n        data.append(\"cloud_name\", \"dfkq2jpbw\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/dfkq2jpbw/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setUrl(data.url)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const uploadFields = () =>{\r\n        if(!/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(email)){\r\n            window.alert(\"invalid email\")\r\n            return\r\n        }\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                Pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n            window.alert(data.error)\r\n            // M.toast({html: data.error})\r\n            }\r\n            else{\r\n                window.alert(data.massage)\r\n                history.push('/signin')\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const PostData = () =>{\r\n        if(image){\r\n            uploadPic()\r\n        }else{\r\n            uploadFields()\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <main style={{maxWidth:\"650px\", margin:\"0 auto\"}}>\r\n        <div className=\"signup\">\r\n            <div className=\"card\">\r\n                <h2>SocialApp</h2>\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"name\" \r\n                value={name} \r\n                onChange={(e)=>setName(e.target.value)}\r\n                />\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"email\"\r\n                value={email} \r\n                onChange={(e)=>setEmail(e.target.value)}\r\n                />\r\n                <input \r\n                type=\"password\" \r\n                placeholder=\"password\"\r\n                value={password} \r\n                onChange={(e)=>setPassword(e.target.value)}\r\n                />\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn\">\r\n                        <input type=\"file\"\r\n                            id=\"upload\" className=\"hidden\"\r\n                            onChange={(e) => setImage(e.target.files[0])}\r\n                        />\r\n                        <label for=\"upload\">upload Pic</label>\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn\" onClick={()=>PostData()}>SignUp</button>\r\n                <h5>\r\n                    <Link to=\"/signin\" className=\"account\">Already have an account ?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Signup","E:\\MERN\\client\\src\\components\\screens\\UserProfile.js",["89","90","91"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { UserContext } from \"../../App\"\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst Profile = () => {\r\n    const [userProfile, setProfile] = useState(null)\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const { userid } = useParams()\r\n    const [showfollow,setshowFollow] = useState(state?!state.following.includes(userid):true)\r\n    // console.log(userid)\r\n    useEffect(() => {\r\n        fetch(`/user/${userid}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                setProfile(result)\r\n            }) \r\n    }, [])\r\n\r\n    const followUser = () => {\r\n        fetch('/follow', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                followId: userid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n                localStorage.setItem(\"user\",JSON.stringify(data))\r\n                setProfile((prevState)=>{\r\n                    return{\r\n                        ...prevState,\r\n                        user:{\r\n                            ...prevState.user,\r\n                            followers:[...prevState.user.followers,data._id]\r\n                        }\r\n                    }\r\n                })\r\n                setshowFollow(false)\r\n            })\r\n    }\r\n\r\n    const unfollowUser = () => {\r\n        fetch('/unfollow', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                unfollowId: userid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n                localStorage.setItem(\"user\",JSON.stringify(data))\r\n                setProfile((prevState)=>{\r\n                    const newFollowers = prevState.user.followers.filter(item=>item != data._id)\r\n                    return{\r\n                        ...prevState,\r\n                        user:{\r\n                            ...prevState.user,\r\n                            followers:newFollowers\r\n                        }\r\n                    }\r\n                })\r\n                setshowFollow(true)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {userProfile ?\r\n                <main style={{ maxWidth: \"750px\", margin: \"0 auto\" }}>\r\n                    <div className=\"profile\">\r\n                        <div className=\"card-left\">\r\n                            <img\r\n                                src={userProfile.user.Pic}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card-right\">\r\n                            <h4>{userProfile.user.name}</h4>\r\n                            <h5>{userProfile.user.email}</h5>\r\n                            <div className=\"card-item\">\r\n                                <h5>{userProfile.posts.length} posts</h5>\r\n                                <h5>{userProfile.user.followers.length} followers</h5>\r\n                                <h5>{userProfile.user.following.length} following</h5>\r\n                            </div>\r\n                            {showfollow?\r\n                            <button className=\"btn-follow\" onClick={() => followUser()}>FOLLOW</button>\r\n                            :\r\n                            <button className=\"btn-follow\" onClick={() => unfollowUser()}>UNFOLLOW</button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"gallery\">\r\n                        {\r\n                            userProfile.posts.map(item => {\r\n                                return (\r\n                                    <img key={item._id} className=\"item\" src={item.photo} alt={item.title} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </main>\r\n                : <h2>loading...</h2>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","E:\\MERN\\client\\src\\components\\reducers\\userReducer.js",["92","93","94","95"],"export const initialState = null\r\n\r\nexport const reducer = (state, action) => {\r\n    if (action.type == \"USER\") {\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type==\"UPDATE\"){\r\n        return{\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type==\"UPDATEPIC\"){\r\n        return{\r\n            ...state,\r\n            Pic:action.payload.Pic\r\n        }\r\n    }\r\n    return state\r\n}","E:\\MERN\\client\\src\\components\\screens\\SubUserPosts.js",["96","97","98","99","100","101"],"E:\\MERN\\client\\src\\components\\screens\\Home.js",["102","103","104","105","106","107"],"import React, { useState, useEffect, useContext } from 'react'\r\n// import { post } from '../../../../server/routes/post'\r\nimport { UserContext } from '../../App'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([])\r\n    const { state, dispatch } = useContext(UserContext)\r\n    useEffect(() => {\r\n        fetch('/allpost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setData(result.posts)\r\n            })\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id == result._id) {\r\n                        return result;\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id == result._id) {\r\n                        return result;\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const makeCooment = (text, postId) => {\r\n        fetch('/comment', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: postId,\r\n                text: text\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id == result._id) {\r\n                        return result;\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const deletePost = (postId) => {\r\n        fetch(`/deletepost/${postId}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n\r\n                const newData = data.filter(item => {\r\n                    return item._id !== result._id\r\n                })\r\n                setData(newData)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"home\">\r\n                {\r\n                    data.map(item => {\r\n                        return (\r\n                            <div className=\"home-card\">\r\n                                <h5><Link to={item.postedBy._id !== state._id ? \"/profile/\" + item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id == state._id\r\n                                    && <i className=\"material-icons\"\r\n                                        onClick={() => deletePost(item._id)}\r\n                                    >delete</i>\r\n                                } </h5>\r\n                                <div className=\"card-img\">\r\n                                    <img src={item.photo} />\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                    {item.likes.includes(state._id)\r\n                                        ?\r\n                                        <i className=\"material-icons\"\r\n                                            onClick={() => { unlikePost(item._id) }}\r\n                                        >thumb_down</i>\r\n                                        :\r\n                                        <i className=\"material-icons\"\r\n                                            onClick={() => { likePost(item._id) }}\r\n                                        >thumb_up</i>\r\n                                    }\r\n                                    <h6>{item.likes.length} likes</h6>\r\n                                    <h6>{item.title}</h6>\r\n                                    <p>{item.body}</p>\r\n                                    {\r\n                                        item.comments.map(record => {\r\n                                            return (\r\n                                                <p key={record._id}><span style={{ fontWeight: \"1000\" }}>{record.postedBy.name} </span>{record.text}</p>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <form onSubmit={(e) => {\r\n                                        e.preventDefault()\r\n                                        makeCooment(e.target[0].value, item._id)\r\n                                    }}>\r\n                                        <input type=\"text\" placeholder=\"add a comment\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":17,"column":11,"nodeType":"114","messageId":"115","endLine":17,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":28,"column":6,"nodeType":"118","endLine":28,"endColumn":8,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"113","line":6,"column":12,"nodeType":"114","messageId":"115","endLine":6,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":11,"column":26,"nodeType":"122","messageId":"123","endLine":11,"endColumn":27,"suggestions":"124"},{"ruleId":"120","severity":1,"message":"125","line":11,"column":34,"nodeType":"122","messageId":"123","endLine":11,"endColumn":35,"suggestions":"126"},{"ruleId":"120","severity":1,"message":"121","line":11,"column":50,"nodeType":"122","messageId":"123","endLine":11,"endColumn":51,"suggestions":"127"},{"ruleId":"120","severity":1,"message":"125","line":11,"column":58,"nodeType":"122","messageId":"123","endLine":11,"endColumn":59,"suggestions":"128"},{"ruleId":"120","severity":1,"message":"125","line":11,"column":67,"nodeType":"122","messageId":"123","endLine":11,"endColumn":68,"suggestions":"129"},{"ruleId":"120","severity":1,"message":"125","line":11,"column":71,"nodeType":"122","messageId":"123","endLine":11,"endColumn":72,"suggestions":"130"},{"ruleId":"120","severity":1,"message":"121","line":11,"column":87,"nodeType":"122","messageId":"123","endLine":11,"endColumn":88,"suggestions":"131"},{"ruleId":"120","severity":1,"message":"125","line":11,"column":95,"nodeType":"122","messageId":"123","endLine":11,"endColumn":96,"suggestions":"132"},{"ruleId":"120","severity":1,"message":"121","line":11,"column":112,"nodeType":"122","messageId":"123","endLine":11,"endColumn":113,"suggestions":"133"},{"ruleId":"120","severity":1,"message":"125","line":11,"column":120,"nodeType":"122","messageId":"123","endLine":11,"endColumn":121,"suggestions":"134"},{"ruleId":"112","severity":1,"message":"135","line":8,"column":12,"nodeType":"114","messageId":"115","endLine":8,"endColumn":15},{"ruleId":"116","severity":1,"message":"136","line":59,"column":8,"nodeType":"118","endLine":59,"endColumn":15,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":69,"column":25,"nodeType":"140","endLine":71,"endColumn":27},{"ruleId":"116","severity":1,"message":"141","line":36,"column":8,"nodeType":"118","endLine":36,"endColumn":13,"suggestions":"142"},{"ruleId":"116","severity":1,"message":"143","line":16,"column":7,"nodeType":"118","endLine":16,"endColumn":12,"suggestions":"144"},{"ruleId":"120","severity":1,"message":"121","line":37,"column":26,"nodeType":"122","messageId":"123","endLine":37,"endColumn":27,"suggestions":"145"},{"ruleId":"120","severity":1,"message":"125","line":37,"column":34,"nodeType":"122","messageId":"123","endLine":37,"endColumn":35,"suggestions":"146"},{"ruleId":"120","severity":1,"message":"121","line":37,"column":50,"nodeType":"122","messageId":"123","endLine":37,"endColumn":51,"suggestions":"147"},{"ruleId":"120","severity":1,"message":"125","line":37,"column":58,"nodeType":"122","messageId":"123","endLine":37,"endColumn":59,"suggestions":"148"},{"ruleId":"120","severity":1,"message":"125","line":37,"column":67,"nodeType":"122","messageId":"123","endLine":37,"endColumn":68,"suggestions":"149"},{"ruleId":"120","severity":1,"message":"125","line":37,"column":71,"nodeType":"122","messageId":"123","endLine":37,"endColumn":72,"suggestions":"150"},{"ruleId":"120","severity":1,"message":"121","line":37,"column":87,"nodeType":"122","messageId":"123","endLine":37,"endColumn":88,"suggestions":"151"},{"ruleId":"120","severity":1,"message":"125","line":37,"column":95,"nodeType":"122","messageId":"123","endLine":37,"endColumn":96,"suggestions":"152"},{"ruleId":"120","severity":1,"message":"121","line":37,"column":112,"nodeType":"122","messageId":"123","endLine":37,"endColumn":113,"suggestions":"153"},{"ruleId":"120","severity":1,"message":"125","line":37,"column":120,"nodeType":"122","messageId":"123","endLine":37,"endColumn":121,"suggestions":"154"},{"ruleId":"116","severity":1,"message":"155","line":21,"column":8,"nodeType":"118","endLine":21,"endColumn":10,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":67,"column":85,"nodeType":"159","messageId":"160","endLine":67,"endColumn":87},{"ruleId":"138","severity":1,"message":"139","line":86,"column":29,"nodeType":"140","endLine":88,"endColumn":31},{"ruleId":"157","severity":1,"message":"161","line":4,"column":21,"nodeType":"159","messageId":"160","endLine":4,"endColumn":23},{"ruleId":"157","severity":1,"message":"161","line":7,"column":19,"nodeType":"159","messageId":"160","endLine":7,"endColumn":21},{"ruleId":"157","severity":1,"message":"161","line":10,"column":19,"nodeType":"159","messageId":"160","endLine":10,"endColumn":21},{"ruleId":"157","severity":1,"message":"161","line":17,"column":19,"nodeType":"159","messageId":"160","endLine":17,"endColumn":21},{"ruleId":"112","severity":1,"message":"162","line":8,"column":20,"nodeType":"114","messageId":"115","endLine":8,"endColumn":28},{"ruleId":"157","severity":1,"message":"161","line":35,"column":34,"nodeType":"159","messageId":"160","endLine":35,"endColumn":36},{"ruleId":"157","severity":1,"message":"161","line":60,"column":34,"nodeType":"159","messageId":"160","endLine":60,"endColumn":36},{"ruleId":"157","severity":1,"message":"161","line":87,"column":34,"nodeType":"159","messageId":"160","endLine":87,"endColumn":36},{"ruleId":"157","severity":1,"message":"161","line":123,"column":174,"nodeType":"159","messageId":"160","endLine":123,"endColumn":176},{"ruleId":"138","severity":1,"message":"139","line":129,"column":37,"nodeType":"140","endLine":129,"endColumn":61},{"ruleId":"112","severity":1,"message":"162","line":8,"column":20,"nodeType":"114","messageId":"115","endLine":8,"endColumn":28},{"ruleId":"157","severity":1,"message":"161","line":35,"column":34,"nodeType":"159","messageId":"160","endLine":35,"endColumn":36},{"ruleId":"157","severity":1,"message":"161","line":60,"column":34,"nodeType":"159","messageId":"160","endLine":60,"endColumn":36},{"ruleId":"157","severity":1,"message":"161","line":87,"column":34,"nodeType":"159","messageId":"160","endLine":87,"endColumn":36},{"ruleId":"157","severity":1,"message":"161","line":123,"column":174,"nodeType":"159","messageId":"160","endLine":123,"endColumn":176},{"ruleId":"138","severity":1,"message":"139","line":129,"column":37,"nodeType":"140","endLine":129,"endColumn":61},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["165"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["166","167"],"Unnecessary escape character: \\\".",["168","169"],["170","171"],["172","173"],["174","175"],["176","177"],["178","179"],["180","181"],["182","183"],["184","185"],"'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["186"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'body' and 'title'. Either include them or remove the dependency array.",["187"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["188"],["189","190"],["191","192"],["193","194"],["195","196"],["197","198"],["199","200"],["201","202"],["203","204"],["205","206"],["207","208"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["209"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"messageId":"212","fix":"213","desc":"214"},{"messageId":"215","fix":"216","desc":"217"},{"messageId":"212","fix":"218","desc":"214"},{"messageId":"215","fix":"219","desc":"217"},{"messageId":"212","fix":"220","desc":"214"},{"messageId":"215","fix":"221","desc":"217"},{"messageId":"212","fix":"222","desc":"214"},{"messageId":"215","fix":"223","desc":"217"},{"messageId":"212","fix":"224","desc":"214"},{"messageId":"215","fix":"225","desc":"217"},{"messageId":"212","fix":"226","desc":"214"},{"messageId":"215","fix":"227","desc":"217"},{"messageId":"212","fix":"228","desc":"214"},{"messageId":"215","fix":"229","desc":"217"},{"messageId":"212","fix":"230","desc":"214"},{"messageId":"215","fix":"231","desc":"217"},{"messageId":"212","fix":"232","desc":"214"},{"messageId":"215","fix":"233","desc":"217"},{"messageId":"212","fix":"234","desc":"214"},{"messageId":"215","fix":"235","desc":"217"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"messageId":"212","fix":"242","desc":"214"},{"messageId":"215","fix":"243","desc":"217"},{"messageId":"212","fix":"244","desc":"214"},{"messageId":"215","fix":"245","desc":"217"},{"messageId":"212","fix":"246","desc":"214"},{"messageId":"215","fix":"247","desc":"217"},{"messageId":"212","fix":"248","desc":"214"},{"messageId":"215","fix":"249","desc":"217"},{"messageId":"212","fix":"250","desc":"214"},{"messageId":"215","fix":"251","desc":"217"},{"messageId":"212","fix":"252","desc":"214"},{"messageId":"215","fix":"253","desc":"217"},{"messageId":"212","fix":"254","desc":"214"},{"messageId":"215","fix":"255","desc":"217"},{"messageId":"212","fix":"256","desc":"214"},{"messageId":"215","fix":"257","desc":"217"},{"messageId":"212","fix":"258","desc":"214"},{"messageId":"215","fix":"259","desc":"217"},{"messageId":"212","fix":"260","desc":"214"},{"messageId":"215","fix":"261","desc":"217"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [dispatch, history]",{"range":"264","text":"265"},"removeEscape",{"range":"266","text":"267"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"268","text":"269"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"270","text":"267"},{"range":"271","text":"269"},{"range":"272","text":"267"},{"range":"273","text":"269"},{"range":"274","text":"267"},{"range":"275","text":"269"},{"range":"276","text":"267"},{"range":"277","text":"269"},{"range":"278","text":"267"},{"range":"279","text":"269"},{"range":"280","text":"267"},{"range":"281","text":"269"},{"range":"282","text":"267"},{"range":"283","text":"269"},{"range":"284","text":"267"},{"range":"285","text":"269"},{"range":"286","text":"267"},{"range":"287","text":"269"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"288","text":"289"},"Update the dependencies array to be: [body, title, url]",{"range":"290","text":"291"},"Update the dependencies array to be: [uploadFields, url]",{"range":"292","text":"293"},{"range":"294","text":"267"},{"range":"295","text":"269"},{"range":"296","text":"267"},{"range":"297","text":"269"},{"range":"298","text":"267"},{"range":"299","text":"269"},{"range":"300","text":"267"},{"range":"301","text":"269"},{"range":"302","text":"267"},{"range":"303","text":"269"},{"range":"304","text":"267"},{"range":"305","text":"269"},{"range":"306","text":"267"},{"range":"307","text":"269"},{"range":"308","text":"267"},{"range":"309","text":"269"},{"range":"310","text":"267"},{"range":"311","text":"269"},{"range":"312","text":"267"},{"range":"313","text":"269"},"Update the dependencies array to be: [userid]",{"range":"314","text":"315"},[1069,1071],"[dispatch, history]",[405,406],"",[405,405],"\\",[413,414],[413,413],[429,430],[429,429],[437,438],[437,437],[446,447],[446,446],[450,451],[450,450],[466,467],[466,466],[474,475],[474,474],[491,492],[491,491],[499,500],[499,499],[2333,2340],"[dispatch, image, state]",[1152,1157],"[body, title, url]",[512,517],"[uploadFields, url]",[1129,1130],[1129,1129],[1137,1138],[1137,1137],[1153,1154],[1153,1153],[1161,1162],[1161,1161],[1170,1171],[1170,1170],[1174,1175],[1174,1174],[1190,1191],[1190,1190],[1198,1199],[1198,1198],[1215,1216],[1215,1215],[1223,1224],[1223,1223],[785,787],"[userid]"]